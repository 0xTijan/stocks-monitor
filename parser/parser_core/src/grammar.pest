WHITESPACE = _{ " " | "\t" | "\n" }

program = { command ~ ("&" ~ command)* }

command = { filter_cmd | sort_cmd | plot_cmd | backtest_cmd }

filter_cmd = { "FILTER" ~ "(" ~ named_args ~ ")" }
sort_cmd = { "SORT" ~ "(" ~ named_args ~ ")" }
plot_cmd = { "PLOT" ~ "(" ~ named_args? ~ ")" }
backtest_cmd = { "BACKTEST" ~ "(" ~ named_args ~ ")" }

named_args = { named_arg ~ ("," ~ named_arg)* }
named_arg = { ident ~ "=" ~ value }

value = { logical_block | date | duration | keyword | number | ident | arithmetic_expr | list | string }

list = { "[" ~ list_items? ~ "]" }
list_items = { value ~ ("," ~ value)* }

arithmetic_expr = {
    arithmetic_term ~ ( operation ~ arithmetic_term )*
}

arithmetic_term = {
    function_call
    | ident
    | number
    | tuple_expr
    | "(" ~ arithmetic_expr ~ ")"
}

operation = { "/" | "+" }

tuple_expr = { "(" ~ tuple_items ~ ")" }
tuple_items = { value ~ ("," ~ value)* }

expression = { logical_expr }

logical_block = { "[" ~ logical_expr ~ "]" }

logical_expr = {
    logical_expr_inner ~ (LOGICAL_OP ~ logical_expr_inner)*
}

logical_expr_inner = {
    comparison
    | "(" ~ logical_expr ~ ")"
}

comparison = {
    operand ~ comparator ~ operand
}

operand = {
    function_call
    | ident
    | number
    | "(" ~ logical_expr ~ ")"
}

function_call = { ident ~ "(" ~ arguments? ~ ")" }
arguments = { argument ~ ("," ~ argument)* }
argument = { ident | number | string }

comparator = { ">=" | "<=" | ">" | "<" | "=" }
LOGICAL_OP = { "AND" | "OR" }

keyword = @{ "today" }

number = @{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
ident = @{ (ASCII_ALPHANUMERIC | "_")+ }
string = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
date = @{ ASCII_DIGIT{4} ~ "-" ~ ASCII_DIGIT{2} ~ "-" ~ ASCII_DIGIT{2} }
duration = @{ ASCII_DIGIT+ ~ ( "d" | "w" | "m" | "y" ) }
